/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projeto.poo.InterfaceGrafica;

import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import projeto.poo.model.cliente.Cliente;
import projeto.poo.model.cliente.ClienteFisico;
import projeto.poo.model.cliente.ClienteJuridico;
import projeto.poo.model.contas.ContaCorrente;
import projeto.poo.model.contas.ContaPoupanca;
import projeto.poo.model.contas.Contas;
import projeto.poo.model.contas.ContaMessage;
import projeto.poo.servico.cliente.Servico;
import projeto.poo.util.dao.cliente.DaoClienteF;
import projeto.poo.util.dao.cliente.DaoClienteJ;
import projeto.poo.util.dao.conta.DaoConta;

/**
 *
 * @author matheus.fboliveira
 * @author victor.gserafim
 */
public class TelaInicial extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicial
     */
    boolean inserirConta = true;
    boolean inserirCliente = true;
    Cliente cliente = null;

    public TelaInicial() {
        
        initComponents();
        //Faz com que a janela seja aberta no meio da tela
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        empty = new javax.swing.JPanel();
        botaoSair = new javax.swing.JButton();
        painelConta = new javax.swing.JPanel();
        pesqLb = new javax.swing.JLabel();
        txtPesquisa = new javax.swing.JTextField();
        pesqCont = new javax.swing.JButton();
        dadosConta = new javax.swing.JPanel();
        nomeCont = new javax.swing.JLabel();
        saldoCont = new javax.swing.JLabel();
        tipConta = new javax.swing.JLabel();
        fecharContbtn = new javax.swing.JButton();
        Altbtn = new javax.swing.JButton();
        sacarbtn = new javax.swing.JButton();
        depositarbtn = new javax.swing.JButton();
        transfbtn = new javax.swing.JButton();
        saldo = new javax.swing.JLabel();
        nomeContLb = new javax.swing.JLabel();
        tipContLb = new javax.swing.JLabel();
        numerocont = new javax.swing.JLabel();
        numConta = new javax.swing.JLabel();
        painelAbrirConta = new javax.swing.JPanel();
        clienteLb = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        buscarbtn = new javax.swing.JButton();
        infoConta = new javax.swing.JPanel();
        infoCorrente = new javax.swing.JButton();
        infoPoup = new javax.swing.JButton();
        NomeContLb = new javax.swing.JLabel();
        NomeContxt = new javax.swing.JTextField();
        NumContLb = new javax.swing.JLabel();
        NumContxt = new javax.swing.JTextField();
        checkTermos = new javax.swing.JCheckBox();
        Finalizar = new javax.swing.JButton();
        comboTipo = new javax.swing.JComboBox<>();
        tipLabel = new javax.swing.JLabel();
        clienteLabel = new javax.swing.JLabel();
        nomCliLb = new javax.swing.JLabel();
        painelOpcaoCliente = new javax.swing.JPanel();
        pessoaFisca = new javax.swing.JButton();
        pessoaJuridica = new javax.swing.JButton();
        painelCadastrarCliente = new javax.swing.JPanel();
        labelNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        labelData = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        labelCpfOUCnpj = new javax.swing.JLabel();
        txtCpfCnpj = new javax.swing.JTextField();
        labelLogradouro = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        labelData1 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        labelLogradouro1 = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        comboBoxEstados = new javax.swing.JComboBox<>();
        txtBairro = new javax.swing.JTextField();
        labelLogradouro2 = new javax.swing.JLabel();
        txtTel = new javax.swing.JTextField();
        labelLogradouro3 = new javax.swing.JLabel();
        labelLogradouro4 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        BotaoSalvarCadastroF = new javax.swing.JButton();
        ID = new javax.swing.JLabel();
        painelConsultarCliente = new javax.swing.JPanel();
        labelcliente = new javax.swing.JLabel();
        txtConsultaCli = new javax.swing.JTextField();
        botaoBuscar = new javax.swing.JButton();
        painelOpcaoConsultar = new javax.swing.JPanel();
        botaoAtualizar = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        labelNomePes = new javax.swing.JLabel();
        labelNomeCli = new javax.swing.JLabel();
        MenuBar = new javax.swing.JMenuBar();
        MenuHome = new javax.swing.JMenu();
        MenuInicio = new javax.swing.JMenuItem();
        MenuCliente = new javax.swing.JMenu();
        MenuCadastrar = new javax.swing.JMenuItem();
        MenuAtualizar = new javax.swing.JMenuItem();
        MenuConta = new javax.swing.JMenu();
        MenuEntrarConta = new javax.swing.JMenuItem();
        MenuAbrirConta = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciamento de Contas");
        setResizable(false);

        mainPanel.setLayout(new java.awt.CardLayout());

        botaoSair.setText("Sair");
        botaoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout emptyLayout = new javax.swing.GroupLayout(empty);
        empty.setLayout(emptyLayout);
        emptyLayout.setHorizontalGroup(
            emptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emptyLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(botaoSair, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );
        emptyLayout.setVerticalGroup(
            emptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, emptyLayout.createSequentialGroup()
                .addContainerGap(198, Short.MAX_VALUE)
                .addComponent(botaoSair, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        mainPanel.add(empty, "empty");

        pesqLb.setText("Pesquisar:");

        txtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaActionPerformed(evt);
            }
        });

        pesqCont.setText("Pesquisar");
        pesqCont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesqContActionPerformed(evt);
            }
        });

        dadosConta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        nomeCont.setText("Nome Conta:");

        saldoCont.setText("Saldo: R$");

        tipConta.setText("Tipo Conta:");

        fecharContbtn.setText("Fechar Conta");
        fecharContbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharContbtnActionPerformed(evt);
            }
        });

        Altbtn.setText("Alterar");
        Altbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AltbtnActionPerformed(evt);
            }
        });

        sacarbtn.setText("Sacar");
        sacarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sacarbtnActionPerformed(evt);
            }
        });

        depositarbtn.setText("Depositar");
        depositarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositarbtnActionPerformed(evt);
            }
        });

        transfbtn.setText("Trânsferir");
        transfbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transfbtnActionPerformed(evt);
            }
        });

        saldo.setText(" ");

        nomeContLb.setText(" ");

        tipContLb.setText(" ");

        numerocont.setText("Número Conta:");

        numConta.setText(" ");

        javax.swing.GroupLayout dadosContaLayout = new javax.swing.GroupLayout(dadosConta);
        dadosConta.setLayout(dadosContaLayout);
        dadosContaLayout.setHorizontalGroup(
            dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dadosContaLayout.createSequentialGroup()
                .addGroup(dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dadosContaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(transfbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Altbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fecharContbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                    .addGroup(dadosContaLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(dadosContaLayout.createSequentialGroup()
                                .addComponent(saldoCont)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(dadosContaLayout.createSequentialGroup()
                                .addComponent(numerocont)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numConta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(dadosContaLayout.createSequentialGroup()
                                    .addComponent(tipConta)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tipContLb, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dadosContaLayout.createSequentialGroup()
                                    .addComponent(nomeCont)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(nomeContLb, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(dadosContaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(depositarbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addGap(17, 17, 17)
                        .addComponent(sacarbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                .addContainerGap())
        );
        dadosContaLayout.setVerticalGroup(
            dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dadosContaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeCont)
                    .addComponent(nomeContLb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipConta)
                    .addComponent(tipContLb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numerocont)
                    .addComponent(numConta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saldoCont)
                    .addComponent(saldo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(depositarbtn)
                    .addComponent(sacarbtn))
                .addGap(18, 18, 18)
                .addGroup(dadosContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Altbtn)
                    .addComponent(transfbtn)
                    .addComponent(fecharContbtn))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout painelContaLayout = new javax.swing.GroupLayout(painelConta);
        painelConta.setLayout(painelContaLayout);
        painelContaLayout.setHorizontalGroup(
            painelContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelContaLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(pesqLb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPesquisa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pesqCont, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addComponent(dadosConta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        painelContaLayout.setVerticalGroup(
            painelContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelContaLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(painelContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pesqLb)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesqCont))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dadosConta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainPanel.add(painelConta, "painelConta");
        painelConta.getAccessibleContext().setAccessibleName("");

        clienteLb.setText("Cliente:");

        buscarbtn.setText("Buscar");
        buscarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarbtnActionPerformed(evt);
            }
        });

        infoConta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        infoCorrente.setText("Informações Conta Corrente");
        infoCorrente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoCorrenteActionPerformed(evt);
            }
        });

        infoPoup.setText("Informações Conta Poupança");
        infoPoup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoPoupActionPerformed(evt);
            }
        });

        NomeContLb.setText("Nome da Conta:");

        NomeContxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeContxtActionPerformed(evt);
            }
        });

        NumContLb.setText("Número da Conta:");

        NumContxt.setEditable(false);

        checkTermos.setText("Aceito os termos e condições da abertuda de conta.");
        checkTermos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkTermosActionPerformed(evt);
            }
        });

        Finalizar.setText("Flinalizar");
        Finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalizarActionPerformed(evt);
            }
        });

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Conta Corrente", "Conta Poupança" }));
        comboTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoActionPerformed(evt);
            }
        });

        tipLabel.setText("Tipo Conta:");

        clienteLabel.setText("Cliente:");

        nomCliLb.setText(" ");

        javax.swing.GroupLayout infoContaLayout = new javax.swing.GroupLayout(infoConta);
        infoConta.setLayout(infoContaLayout);
        infoContaLayout.setHorizontalGroup(
            infoContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoContaLayout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(Finalizar, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                .addGap(162, 162, 162))
            .addGroup(infoContaLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(infoCorrente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoPoup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(infoContaLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(checkTermos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(infoContaLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(infoContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoContaLayout.createSequentialGroup()
                        .addComponent(clienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nomCliLb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(infoContaLayout.createSequentialGroup()
                        .addGroup(infoContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NomeContLb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NumContLb)
                            .addComponent(tipLabel))
                        .addGap(18, 18, 18)
                        .addGroup(infoContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NumContxt)
                            .addComponent(NomeContxt)
                            .addComponent(comboTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(24, 24, 24))
        );
        infoContaLayout.setVerticalGroup(
            infoContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoContaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteLabel)
                    .addComponent(nomCliLb))
                .addGap(8, 8, 8)
                .addGroup(infoContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipLabel))
                .addGap(18, 18, 18)
                .addGroup(infoContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NomeContLb)
                    .addComponent(NomeContxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumContLb)
                    .addComponent(NumContxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoCorrente)
                    .addComponent(infoPoup))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(checkTermos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Finalizar))
        );

        javax.swing.GroupLayout painelAbrirContaLayout = new javax.swing.GroupLayout(painelAbrirConta);
        painelAbrirConta.setLayout(painelAbrirContaLayout);
        painelAbrirContaLayout.setHorizontalGroup(
            painelAbrirContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAbrirContaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clienteLb, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buscarbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
            .addGroup(painelAbrirContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelAbrirContaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(infoConta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        painelAbrirContaLayout.setVerticalGroup(
            painelAbrirContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAbrirContaLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(painelAbrirContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteLb)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarbtn))
                .addContainerGap(275, Short.MAX_VALUE))
            .addGroup(painelAbrirContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAbrirContaLayout.createSequentialGroup()
                    .addGap(45, 45, 45)
                    .addComponent(infoConta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        mainPanel.add(painelAbrirConta, "painelAbrirConta");

        pessoaFisca.setText("Pessoa Fisica ");
        pessoaFisca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pessoaFiscaActionPerformed(evt);
            }
        });

        pessoaJuridica.setText("Pessoa Juridica");
        pessoaJuridica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pessoaJuridicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelOpcaoClienteLayout = new javax.swing.GroupLayout(painelOpcaoCliente);
        painelOpcaoCliente.setLayout(painelOpcaoClienteLayout);
        painelOpcaoClienteLayout.setHorizontalGroup(
            painelOpcaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelOpcaoClienteLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(pessoaFisca, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(pessoaJuridica, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        painelOpcaoClienteLayout.setVerticalGroup(
            painelOpcaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelOpcaoClienteLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(painelOpcaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pessoaFisca, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pessoaJuridica, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        mainPanel.add(painelOpcaoCliente, "painelOpcaoCliente");

        labelNome.setText("Nome");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeKeyTyped(evt);
            }
        });

        labelData.setText("Data Nasc.");

        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });
        txtData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDataKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDataKeyTyped(evt);
            }
        });

        txtCpfCnpj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCpfCnpjKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCpfCnpjKeyTyped(evt);
            }
        });

        labelLogradouro.setText("Logradouro");

        txtLogradouro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLogradouroActionPerformed(evt);
            }
        });
        txtLogradouro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLogradouroKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLogradouroKeyTyped(evt);
            }
        });

        labelData1.setText("Numero");

        txtNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroActionPerformed(evt);
            }
        });
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        labelLogradouro1.setText("Cidade");

        txtCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCidadeActionPerformed(evt);
            }
        });
        txtCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCidadeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCidadeKeyTyped(evt);
            }
        });

        comboBoxEstados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estado...", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        txtBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroActionPerformed(evt);
            }
        });
        txtBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBairroKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBairroKeyTyped(evt);
            }
        });

        labelLogradouro2.setText("Bairro");

        txtTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelActionPerformed(evt);
            }
        });
        txtTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelKeyTyped(evt);
            }
        });

        labelLogradouro3.setText("Tel.");

        labelLogradouro4.setText("E-mail");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });

        BotaoSalvarCadastroF.setText("Salvar");
        BotaoSalvarCadastroF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSalvarCadastroFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelCadastrarClienteLayout = new javax.swing.GroupLayout(painelCadastrarCliente);
        painelCadastrarCliente.setLayout(painelCadastrarClienteLayout);
        painelCadastrarClienteLayout.setHorizontalGroup(
            painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastrarClienteLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BotaoSalvarCadastroF, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                        .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                                .addComponent(labelLogradouro4)
                                .addGap(37, 37, 37)
                                .addComponent(txtEmail))
                            .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                                        .addComponent(labelLogradouro2)
                                        .addGap(37, 37, 37)
                                        .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                                        .addComponent(labelLogradouro1)
                                        .addGap(32, 32, 32)
                                        .addComponent(txtCidade))
                                    .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                                        .addComponent(labelLogradouro)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtLogradouro))))
                                .addGap(40, 40, 40)
                                .addComponent(labelData1)
                                .addGap(18, 18, 18)
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                                        .addComponent(labelNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(26, 26, 26)))
                                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastrarClienteLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(txtNome))
                                    .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                                        .addGap(210, 210, 210)
                                        .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                                                .addComponent(labelLogradouro3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastrarClienteLayout.createSequentialGroup()
                                                .addComponent(labelCpfOUCnpj)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtCpfCnpj)
                                                    .addComponent(comboBoxEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                        .addGap(28, 28, 28))
                    .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                        .addComponent(ID)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelCadastrarClienteLayout.setVerticalGroup(
            painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastrarClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelData)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCpfOUCnpj)
                    .addComponent(txtCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLogradouro)
                    .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelData1)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLogradouro1)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLogradouro2)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelLogradouro3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLogradouro4)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotaoSalvarCadastroF)
                .addContainerGap())
        );

        mainPanel.add(painelCadastrarCliente, "painelCadastrarCliente");

        labelcliente.setText("Cliente:");

        botaoBuscar.setText("Buscar");
        botaoBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBuscarActionPerformed(evt);
            }
        });

        botaoAtualizar.setText("Atualizar");
        botaoAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarActionPerformed(evt);
            }
        });

        botaoExcluir.setText("Excluir");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelOpcaoConsultarLayout = new javax.swing.GroupLayout(painelOpcaoConsultar);
        painelOpcaoConsultar.setLayout(painelOpcaoConsultarLayout);
        painelOpcaoConsultarLayout.setHorizontalGroup(
            painelOpcaoConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelOpcaoConsultarLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(botaoAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(botaoExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        painelOpcaoConsultarLayout.setVerticalGroup(
            painelOpcaoConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelOpcaoConsultarLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(painelOpcaoConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAtualizar)
                    .addComponent(botaoExcluir))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        labelNomePes.setText("Nome: ");

        javax.swing.GroupLayout painelConsultarClienteLayout = new javax.swing.GroupLayout(painelConsultarCliente);
        painelConsultarCliente.setLayout(painelConsultarClienteLayout);
        painelConsultarClienteLayout.setHorizontalGroup(
            painelConsultarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultarClienteLayout.createSequentialGroup()
                .addComponent(labelcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtConsultaCli, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(painelConsultarClienteLayout.createSequentialGroup()
                .addComponent(labelNomePes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelNomeCli, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelConsultarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelOpcaoConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelConsultarClienteLayout.setVerticalGroup(
            painelConsultarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultarClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConsultarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelcliente)
                    .addComponent(txtConsultaCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoBuscar))
                .addGap(18, 18, 18)
                .addGroup(painelConsultarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomePes)
                    .addComponent(labelNomeCli, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(210, Short.MAX_VALUE))
            .addGroup(painelConsultarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelConsultarClienteLayout.createSequentialGroup()
                    .addGap(0, 134, Short.MAX_VALUE)
                    .addComponent(painelOpcaoConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        mainPanel.add(painelConsultarCliente, "painelConsultarCliente");
        painelConsultarCliente.getAccessibleContext().setAccessibleName("");

        MenuHome.setText("Home");
        MenuHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuHomeActionPerformed(evt);
            }
        });

        MenuInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/poo/InterfaceGrafica/home.jpg"))); // NOI18N
        MenuInicio.setText("Inicio");
        MenuInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuInicioActionPerformed(evt);
            }
        });
        MenuHome.add(MenuInicio);

        MenuBar.add(MenuHome);

        MenuCliente.setText("Cliente");

        MenuCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/poo/InterfaceGrafica/users.jpg"))); // NOI18N
        MenuCadastrar.setText("Cadastrar");
        MenuCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCadastrarActionPerformed(evt);
            }
        });
        MenuCliente.add(MenuCadastrar);

        MenuAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/poo/InterfaceGrafica/users.jpg"))); // NOI18N
        MenuAtualizar.setText("Consultar");
        MenuAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAtualizarActionPerformed(evt);
            }
        });
        MenuCliente.add(MenuAtualizar);

        MenuBar.add(MenuCliente);

        MenuConta.setText("Conta");
        MenuConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuContaActionPerformed(evt);
            }
        });

        MenuEntrarConta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/poo/InterfaceGrafica/money.jpg"))); // NOI18N
        MenuEntrarConta.setText("Entrar ");
        MenuEntrarConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuEntrarContaActionPerformed(evt);
            }
        });
        MenuConta.add(MenuEntrarConta);

        MenuAbrirConta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/poo/InterfaceGrafica/money.jpg"))); // NOI18N
        MenuAbrirConta.setText("Nova Conta");
        MenuAbrirConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAbrirContaActionPerformed(evt);
            }
        });
        MenuConta.add(MenuAbrirConta);

        MenuBar.add(MenuConta);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCadastrarActionPerformed

        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "painelOpcaoCliente");


    }//GEN-LAST:event_MenuCadastrarActionPerformed

    private void MenuEntrarContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuEntrarContaActionPerformed

        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "painelConta");
        dadosConta.setVisible(false);

    }//GEN-LAST:event_MenuEntrarContaActionPerformed

    private void MenuAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAtualizarActionPerformed

        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "painelConsultarCliente");
        painelOpcaoConsultar.setVisible(false);


    }//GEN-LAST:event_MenuAtualizarActionPerformed

    private void MenuAbrirContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAbrirContaActionPerformed

        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "painelAbrirConta");

        infoConta.setVisible(false);
    }//GEN-LAST:event_MenuAbrirContaActionPerformed

    private void MenuContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuContaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuContaActionPerformed

    private void MenuHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuHomeActionPerformed

    }//GEN-LAST:event_MenuHomeActionPerformed

    private void txtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaActionPerformed

    private void pesqContActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesqContActionPerformed
        DaoConta dao = new DaoConta();

        if (!"".equals(txtPesquisa.getText())) {
            Contas result = dao.procurar(txtPesquisa.getText());
            txtPesquisa.setText("");
            if (result != null) {
                if ("Conta Corrente".equals(result.getTipoConta())) {
                    ContaCorrente conta = new ContaCorrente(result.getCliente(), result.getNomeCont(),
                            result.getNumConta(), result.getTipoConta(), result.getSaldo());
                    conta.aplicartaxa();
                    dao.atualizar(conta);
                    nomeContLb.setText(conta.getNomeCont());
                    tipContLb.setText(conta.getTipoConta());
                    numConta.setText(Integer.toString(conta.getNumConta()));
                    DecimalFormat df = new DecimalFormat("0.00");
                    saldo.setText(df.format(conta.getSaldo()));
                    dadosConta.setVisible(true);
                } else {
                    ContaPoupanca conta = new ContaPoupanca(result.getCliente(), result.getNomeCont(),
                            result.getNumConta(), result.getTipoConta(), result.getSaldo());
                    conta.aplicarRendimento();
                    dao.atualizar(conta);
                    nomeContLb.setText(conta.getNomeCont());
                    tipContLb.setText(conta.getTipoConta());
                    numConta.setText(Integer.toString(conta.getNumConta()));
                    DecimalFormat df = new DecimalFormat("0.00");
                    saldo.setText(df.format(conta.getSaldo()));
                    dadosConta.setVisible(true);
                }
            } else {
                JOptionPane.showMessageDialog(null,
                        "Nome ou número da conta inválido",
                        "Preenchimento de campo incorreto",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Digite o nome ou o número da conta!");
            txtPesquisa.setText("");
        }
    }//GEN-LAST:event_pesqContActionPerformed

    private void AltbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AltbtnActionPerformed

        DaoConta dao = new DaoConta();
        Contas conta = dao.obter(numConta.getText());

        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "painelAbrirConta");

        nomCliLb.setText(conta.getCliente().getNome());
        for (int i = 0; i < comboTipo.getItemCount(); i++) {
            if (comboTipo.getItemAt(i).equals(conta.getTipoConta())) {
                comboTipo.setSelectedIndex(i);
                break;
            }
        }
        NomeContxt.setText(conta.getNomeCont());
        NumContxt.setText(Integer.toString(conta.getNumConta()));

        inserirConta = false;
    }//GEN-LAST:event_AltbtnActionPerformed

    private void MenuInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuInicioActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "empty");
    }//GEN-LAST:event_MenuInicioActionPerformed

    private void NomeContxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeContxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomeContxtActionPerformed

    private void checkTermosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkTermosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkTermosActionPerformed

    private void fecharContbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharContbtnActionPerformed
        DaoConta dao = new DaoConta();
        Contas result = dao.procurar(numConta.getText());

        int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente fechar sua conta?");
        if (resposta == JOptionPane.YES_OPTION) {
            if (result.getSaldo() == 0) {
                if (result != null) {
                    result.fecharConta(result);
                    JOptionPane.showMessageDialog(null,
                            "Conta fechada com sucesso!",
                            "Fechamento de conta",
                            JOptionPane.INFORMATION_MESSAGE);

                    CardLayout card = (CardLayout) mainPanel.getLayout();
                    card.show(mainPanel, "empty");
                }
            } else {
                JOptionPane.showMessageDialog(null,
                        "Conta possui saldo ou débitos!",
                        "Fechamento de conta",
                        JOptionPane.ERROR_MESSAGE);
            }

        }


    }//GEN-LAST:event_fecharContbtnActionPerformed

    private void sacarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sacarbtnActionPerformed
        DaoConta dao = new DaoConta();
        Contas result = dao.procurar(numConta.getText());

        String resultado = JOptionPane.showInputDialog("Digite o valor a ser sacado:");
        float valor = 0;
        if (resultado != null) {
            try {
                DecimalFormat df = new DecimalFormat("0.00");
                valor = Float.parseFloat(df.format(resultado));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Digite um valor numérico e válido!",
                        "Valor inválido", JOptionPane.ERROR_MESSAGE);
            }
            if (valor > 0) {
                int resposta = JOptionPane.showConfirmDialog(null, "Confirma o saque de R$" + valor + "?");
                if (resposta == JOptionPane.YES_OPTION) {
                    result.sacar(result, valor);
                    JOptionPane.showMessageDialog(null,
                            "Saque realizado",
                            "Saque em conta",
                            JOptionPane.INFORMATION_MESSAGE);
                    DecimalFormat df = new DecimalFormat("0.00");
                    saldo.setText(df.format(result.getSaldo()));
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Saque cancelado",
                            "Saque em conta",
                            JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }

    }//GEN-LAST:event_sacarbtnActionPerformed

    private void transfbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transfbtnActionPerformed
        DaoConta dao = new DaoConta();
        int resposta;
        String resultO = JOptionPane.showInputDialog("Digite o número ou nome da conta de origem:");
        Contas contaO = dao.procurar(resultO);
        if (contaO != null) {
            String resultD = JOptionPane.showInputDialog("Digite o número ou nome da conta de destino:");
            Contas contaD = dao.procurar(resultD);
            if (contaD != null) {
                String resultado = JOptionPane.showInputDialog("Digite o valor a ser transferido:");
                float valor = 0;
                if (resultado != null) {
                    try {
                        valor = Float.parseFloat(resultado);
                    } catch (NumberFormatException e) {
                        ContaMessage.valTransf();
                    }
                    if (valor > 0) {
                        if (valor > contaO.getSaldo()) {
                            resposta = JOptionPane.showConfirmDialog(null, "O valor da transferência é maior que seu saldo,\n"
                                    + "deseja continuar?");
                            if (resposta == JOptionPane.YES_OPTION) {
                                resposta = JOptionPane.showConfirmDialog(null, "Confirma a transferência de R$" + valor + "?");
                                if (resposta == JOptionPane.YES_OPTION) {
                                    contaD.fazerTrasferencia(contaO, contaD, valor);
                                    saldo.setText(Float.toString(contaO.getSaldo()));
                                    JOptionPane.showMessageDialog(null,
                                            "Trasnferência realizada!",
                                            "Trasnferência entre contas",
                                            JOptionPane.INFORMATION_MESSAGE);
                                } else {
                                    ContaMessage.cancelTransf();
                                }
                            } else {
                                ContaMessage.cancelTransf();
                            }
                        } else {
                            ContaMessage.valTransf();
                        }
                    }
                } else {
                    ContaMessage.errorTransf();
                }
            } else {
                ContaMessage.errorTransf();
            }
        } else {
            ContaMessage.errorTransf();
        }
    }//GEN-LAST:event_transfbtnActionPerformed

    private void depositarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositarbtnActionPerformed
        DaoConta dao = new DaoConta();
        Contas result = dao.procurar(numConta.getText());

        String resultado = JOptionPane.showInputDialog("Digite o valor a ser depositado:");
        float valor = 0;
        if (resultado != null) {
            try {
                DecimalFormat df = new DecimalFormat("0.00");
                valor = Float.parseFloat(df.format(resultado));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Digite um valor numérico e válido!",
                        "Valor inválido", JOptionPane.ERROR_MESSAGE);
            }
            if (valor > 0) {
                int resposta = JOptionPane.showConfirmDialog(null, "Confirma o depósito de R$" + valor + "?");
                if (resposta == JOptionPane.YES_OPTION) {
                    result.depositar(result, valor);
                    JOptionPane.showMessageDialog(null,
                            "Depósito realizado",
                            "Depósito em conta",
                            JOptionPane.INFORMATION_MESSAGE);

                    DecimalFormat df = new DecimalFormat("0.00");
                    saldo.setText(df.format(result.getSaldo()));
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Depósito cancelado",
                            "Depósito em conta",
                            JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_depositarbtnActionPerformed

    private void buscarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarbtnActionPerformed
        DaoClienteF daoF = new DaoClienteF();
        DaoClienteJ daoJ = new DaoClienteJ();

        if (!"".equals(txtCliente.getText())) {
            ClienteFisico resultF = daoF.procurar(txtCliente.getText());
            ClienteJuridico resultJ = daoJ.procurar(txtCliente.getText());
            txtPesquisa.setText("");
            if (resultF != null) {
                ContaMessage.bemVindo();

                nomCliLb.setText(resultF.getNome());
                Random random = new Random();
                int num = 9000 + random.nextInt(1000);
                String numString = Integer.toString(num);
                NumContxt.setText(numString);
                infoConta.setVisible(true);
            } else if (resultJ != null) {
                ContaMessage.bemVindo();

                Random random = new Random();
                int num = 9000 + random.nextInt(1000);
                String numString = Integer.toString(num);
                NumContxt.setText(numString);
                nomCliLb.setText(resultJ.getNome());
                infoConta.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(null,
                        "Nome ou número da conta inválido",
                        "Preenchimento de campo incorreto",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Digite o nome do cliente!");
            txtPesquisa.setText("");
        }
    }//GEN-LAST:event_buscarbtnActionPerformed

    private void comboTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTipoActionPerformed

    private void infoCorrenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoCorrenteActionPerformed
        ContaMessage.infoCorrente();
    }//GEN-LAST:event_infoCorrenteActionPerformed

    private void infoPoupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoPoupActionPerformed
        ContaMessage.infoPoup();
    }//GEN-LAST:event_infoPoupActionPerformed

    private void FinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalizarActionPerformed
        if (inserirConta) {
            DaoClienteF daoF = new DaoClienteF();
            DaoClienteJ daoJ = new DaoClienteJ();
            DaoConta daoConta = new DaoConta();
            if (checkTermos.isSelected()) {
                String tipo = comboTipo.getSelectedItem().toString();
                ClienteFisico resultF = daoF.procurar(nomCliLb.getText());
                ClienteJuridico resultJ = daoJ.procurar(nomCliLb.getText());
                if (resultF != null) {
                    if ("Conta Corrente".equals(tipo)) {
                        String nome = NomeContxt.getText();
                        int num = Integer.parseInt(NumContxt.getText());
                        ContaCorrente conta = new ContaCorrente(resultF, nome, num, tipo, 0);

                        daoConta.inserir(conta);
                        ContaMessage.contAberta();

                        CardLayout card = (CardLayout) mainPanel.getLayout();
                        card.show(mainPanel, "empty");
                        limparConta();

                    } else {
                        String nome = NomeContxt.getText();
                        int num = Integer.parseInt(NumContxt.getText());
                        ContaPoupanca conta = new ContaPoupanca(resultF, nome, num, tipo, 0);

                        daoConta.inserir(conta);
                        ContaMessage.contAberta();

                        CardLayout card = (CardLayout) mainPanel.getLayout();
                        card.show(mainPanel, "empty");
                        limparConta();
                    }
                } else if (resultJ != null) {
                    if ("Conta Corrente".equals(tipo)) {
                        String nome = NomeContxt.getText();
                        int num = Integer.parseInt(NumContxt.getText());
                        ContaCorrente conta = new ContaCorrente(resultJ, nome, num, tipo, 0);

                        daoConta.inserir(conta);
                        ContaMessage.contAberta();

                        CardLayout card = (CardLayout) mainPanel.getLayout();
                        card.show(mainPanel, "empty");
                        limparConta();
                    } else {
                        String nome = NomeContxt.getText();
                        int num = Integer.parseInt(NumContxt.getText());
                        ContaPoupanca conta = new ContaPoupanca(resultJ, nome, num, tipo, 0);

                        daoConta.inserir(conta);
                        ContaMessage.contAberta();

                        CardLayout card = (CardLayout) mainPanel.getLayout();
                        card.show(mainPanel, "empty");
                        limparConta();
                    }
                }
            } else {
                ContaMessage.termos();
            }

        } else {
            atualizar();
        }
    }//GEN-LAST:event_FinalizarActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyPressed

    }//GEN-LAST:event_txtNomeKeyPressed

    private void txtNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyTyped
        String caracteres = "0987654321";

        if (caracteres.contains(evt.getKeyChar() + "")) {

            evt.consume();
        }
    }//GEN-LAST:event_txtNomeKeyTyped

    private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataActionPerformed

    private void txtDataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtData.requestFocus(); //ele daria focus no proximo campo, assim como no TAB

        }
    }//GEN-LAST:event_txtDataKeyPressed

    private void txtDataKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataKeyTyped

    }//GEN-LAST:event_txtDataKeyTyped

    private void txtCpfCnpjKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfCnpjKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfCnpjKeyPressed

    private void txtCpfCnpjKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfCnpjKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfCnpjKeyTyped

    private void txtLogradouroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLogradouroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLogradouroActionPerformed

    private void txtLogradouroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLogradouroKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLogradouroKeyPressed

    private void txtLogradouroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLogradouroKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLogradouroKeyTyped

    private void txtNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroActionPerformed

    private void txtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroKeyPressed

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCidadeActionPerformed

    private void txtCidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCidadeKeyPressed

    private void txtCidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCidadeKeyTyped

    private void txtBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroActionPerformed

    private void txtBairroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroKeyPressed

    private void txtBairroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroKeyTyped

    private void txtTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelActionPerformed

    private void txtTelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelKeyPressed

    private void txtTelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelKeyTyped

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailKeyPressed

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailKeyTyped

    private void pessoaFiscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pessoaFiscaActionPerformed

        inserirCliente = true;
        labelCpfOUCnpj.setText("CPF");
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "painelCadastrarCliente");

    }//GEN-LAST:event_pessoaFiscaActionPerformed

    private void pessoaJuridicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pessoaJuridicaActionPerformed

        inserirCliente = true;
        labelCpfOUCnpj.setText("CNPJ");
        Date dataHoje = new Date();
        String data = Servico.convesorDataString(dataHoje);
        txtData.setText(data);
        labelData.setVisible(false);
        txtData.setVisible(false);

        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "painelCadastrarCliente");
    }//GEN-LAST:event_pessoaJuridicaActionPerformed

    private void BotaoSalvarCadastroFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSalvarCadastroFActionPerformed

        try {

            if (inserirCliente) {

                String nome = txtNome.getText();
                String textodata = txtData.getText();
                String CPFouCNPJ = txtCpfCnpj.getText();
                String logradouro = txtLogradouro.getText();
                int numero = Integer.parseInt(txtNumero.getText());
                String cidade = txtCidade.getText();
                String estado = (String) comboBoxEstados.getSelectedItem();
                String bairro = txtBairro.getText();
                String tel = txtTel.getText();
                String email = txtEmail.getText();

                if (labelCpfOUCnpj.getText().equalsIgnoreCase("CPF")) {

                    Date data = Servico.convesorData(textodata);

                    cliente = new ClienteFisico(CPFouCNPJ, nome, tel, data, logradouro, numero, bairro, cidade, estado, tel, email);
                    DaoClienteF fisico = new DaoClienteF();
                    fisico.inserir((ClienteFisico) cliente);

                    CardLayout card = (CardLayout) mainPanel.getLayout();
                    card.show(mainPanel, "empty");

                } else if (labelCpfOUCnpj.getText().equalsIgnoreCase("CNPJ")) {

                    cliente = new ClienteJuridico(CPFouCNPJ, nome, tel, logradouro, numero, bairro, cidade, estado, tel, email);
                    DaoClienteJ juridico = new DaoClienteJ();
                    juridico.inserir((ClienteJuridico) cliente);

                    CardLayout card = (CardLayout) mainPanel.getLayout();
                    card.show(mainPanel, "empty");
                } else {
                    Servico.ClienteNaoCad();
                }

            } else {
                int id = Integer.parseInt(ID.getText());
                String nome = txtNome.getText();
                String textodata = txtData.getText();
                String CPFouCNPJ = txtCpfCnpj.getText();
                String logradouro = txtLogradouro.getText();
                int numero = Integer.parseInt(txtNumero.getText());
                String cidade = txtCidade.getText();
                String estado = (String) comboBoxEstados.getSelectedItem();
                String bairro = txtBairro.getText();
                String tel = txtTel.getText();
                String email = txtEmail.getText();

                if (labelCpfOUCnpj.getText().equalsIgnoreCase("CPF")) {

                    Date data = Servico.convesorData(textodata);

                    cliente = new ClienteFisico(CPFouCNPJ, nome, tel, data, logradouro, numero, bairro, cidade, estado, tel, email);
                    cliente.setId(id);
                    DaoClienteF daof = new DaoClienteF();

                    daof.atualizar((ClienteFisico) cliente);

                    CardLayout card = (CardLayout) mainPanel.getLayout();
                    card.show(mainPanel, "empty");

                } else if (labelCpfOUCnpj.getText().equalsIgnoreCase("CNPJ")) {

                    cliente = new ClienteJuridico(CPFouCNPJ, nome, tel, logradouro, numero, bairro, cidade, estado, tel, email);
                    cliente.setId(id);
                    DaoClienteJ daoj = new DaoClienteJ();

                    daoj.atualizar((ClienteJuridico) cliente);

                    CardLayout card = (CardLayout) mainPanel.getLayout();
                    card.show(mainPanel, "empty");

                }

            }

        } catch (Exception ex) {

            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_BotaoSalvarCadastroFActionPerformed

    private void botaoSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botaoSairActionPerformed

    private void botaoBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoBuscarActionPerformed

        DaoClienteF daoF = new DaoClienteF();
        DaoClienteJ daoJ = new DaoClienteJ();

        if (!"".equals(txtConsultaCli.getText())) {
            ClienteFisico resultF = daoF.procurar(txtConsultaCli.getText());
            ClienteJuridico resultJ = daoJ.procurar(txtConsultaCli.getText());

            if (resultF != null) {

                labelNomeCli.setText(resultF.getNome());
                int id = resultF.getId();
                ID.setText(Integer.toString(id));

                CardLayout card = (CardLayout) mainPanel.getLayout();
                card.show(mainPanel, "painelOpcaoConsultar");
                painelOpcaoConsultar.setVisible(true);

                labelCpfOUCnpj.setText("CPF");
                txtNome.setText(resultF.getNome());
                txtData.setText(Servico.convesorDataString(resultF.getData()));
                txtCpfCnpj.setText(resultF.getCpf());
                txtLogradouro.setText(resultF.getLogradouro());
                txtNumero.setText(Integer.toString(resultF.getNumero()));
                txtCidade.setText(resultF.getCidade());
                txtBairro.setText(resultF.getBairro());
                txtTel.setText(resultF.getTelefone());
                txtEmail.setText(resultF.getEmail());

            } else if (resultJ != null) {

                labelNomeCli.setText(resultJ.getNome());
                int id = resultJ.getId();
                ID.setText(Integer.toString(id));

                CardLayout card = (CardLayout) mainPanel.getLayout();
                card.show(mainPanel, "painelOpcaoConsultar");
                painelOpcaoConsultar.setVisible(true);

                labelData.setVisible(false);
                txtData.setVisible(false);

                labelCpfOUCnpj.setText("CNPJ");
                txtNome.setText(resultJ.getNome());
                txtCpfCnpj.setText(resultJ.getCnpj());
                txtLogradouro.setText(resultJ.getLogradouro());
                txtNumero.setText(Integer.toString(resultJ.getNumero()));
                txtCidade.setText(resultJ.getCidade());
                txtBairro.setText(resultJ.getBairro());
                txtTel.setText(resultJ.getTelefone());
                txtEmail.setText(resultJ.getEmail());

            } else {
                JOptionPane.showMessageDialog(null,
                        "Nome ou número da conta inválido",
                        "Preenchimento de campo incorreto",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Digite o nome do cliente!");

        }
    }//GEN-LAST:event_botaoBuscarActionPerformed

    private void botaoAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "painelCadastrarCliente");
        ID.setVisible(false);
        inserirCliente = false;


    }//GEN-LAST:event_botaoAtualizarActionPerformed


    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        DaoClienteF daof = new DaoClienteF();
        DaoClienteJ daoj = new DaoClienteJ();
        Cliente resultf = daof.procurar(labelNomeCli.getText());
        Cliente resultj = daoj.procurar(labelNomeCli.getText());

        int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente Excluir o cliente?");
        if (resposta == JOptionPane.YES_OPTION) {
            if (resultj != null) {

                daoj.excluir(resultj.getId());

                txtConsultaCli.setText("");
                labelNomeCli.setText("");
            } else if (resultf != null) {
                daof.excluir(resultf.getId());

                txtConsultaCli.setText("");
                labelNomeCli.setText("");
            } else {

                JOptionPane.showMessageDialog(null,
                        "Cliente excluido",
                        "Exclusão de cliente",
                        JOptionPane.INFORMATION_MESSAGE);

                CardLayout card = (CardLayout) mainPanel.getLayout();
                card.show(mainPanel, "empty");
            }
        }
    }//GEN-LAST:event_botaoExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
    }

    public void atualizar() {
        DaoClienteF daoF = new DaoClienteF();
        DaoClienteJ daoJ = new DaoClienteJ();
        DaoConta daoConta = new DaoConta();
        if (checkTermos.isSelected()) {
            String tipo = comboTipo.getSelectedItem().toString();
            ClienteFisico resultF = daoF.procurar(nomCliLb.getText());
            ClienteJuridico resultJ = daoJ.procurar(nomCliLb.getText());
            if (resultF != null) {
                if ("Conta Corrente".equals(tipo)) {
                    ContaCorrente conta = daoConta.obter(NumContxt.getText());
                    conta.setNomeCont(NomeContxt.getText());
                    conta.setTipoConta(tipo);

                    daoConta.atualizar(conta);
                    ContaMessage.contAtualizada();

                } else {
                    int num = 0;
                    ContaPoupanca conta = daoConta.obter(NumContxt.getText(), num);
                    conta.setNomeCont(NomeContxt.getText());
                    conta.setTipoConta(tipo);
                    daoConta.atualizar(conta);
                    ContaMessage.contAtualizada();
                }
            } else if (resultJ != null) {
                if ("Conta Corrente".equals(tipo)) {
                    ContaCorrente conta = daoConta.obter(NumContxt.getText());
                    conta.setNomeCont(NomeContxt.getText());
                    conta.setTipoConta(tipo);
                    daoConta.atualizar(conta);
                    ContaMessage.contAtualizada();
                } else {
                    int num = 0;
                    ContaPoupanca conta = daoConta.obter(NumContxt.getText(), num);
                    conta.setNomeCont(NomeContxt.getText());
                    conta.setTipoConta(tipo);
                    daoConta.atualizar(conta);
                    ContaMessage.contAtualizada();
                }
            }
        } else {
            ContaMessage.termos();
        }
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "empty");
    }
    
    public void limparConta(){
        txtCliente.setText("");
        nomCliLb.setText("");
        NomeContxt.setText("");
        NumContxt.setText("");
        checkTermos.setSelected(false);
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Altbtn;
    private javax.swing.JButton BotaoSalvarCadastroF;
    private javax.swing.JButton Finalizar;
    private javax.swing.JLabel ID;
    private javax.swing.JMenuItem MenuAbrirConta;
    private javax.swing.JMenuItem MenuAtualizar;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem MenuCadastrar;
    private javax.swing.JMenu MenuCliente;
    private javax.swing.JMenu MenuConta;
    private javax.swing.JMenuItem MenuEntrarConta;
    private javax.swing.JMenu MenuHome;
    private javax.swing.JMenuItem MenuInicio;
    private javax.swing.JLabel NomeContLb;
    private javax.swing.JTextField NomeContxt;
    private javax.swing.JLabel NumContLb;
    private javax.swing.JTextField NumContxt;
    private javax.swing.JButton botaoAtualizar;
    private javax.swing.JButton botaoBuscar;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoSair;
    private javax.swing.JButton buscarbtn;
    private javax.swing.JCheckBox checkTermos;
    private javax.swing.JLabel clienteLabel;
    private javax.swing.JLabel clienteLb;
    private javax.swing.JComboBox<String> comboBoxEstados;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JPanel dadosConta;
    private javax.swing.JButton depositarbtn;
    private javax.swing.JPanel empty;
    private javax.swing.JButton fecharContbtn;
    private javax.swing.JPanel infoConta;
    private javax.swing.JButton infoCorrente;
    private javax.swing.JButton infoPoup;
    private javax.swing.JLabel labelCpfOUCnpj;
    private javax.swing.JLabel labelData;
    private javax.swing.JLabel labelData1;
    private javax.swing.JLabel labelLogradouro;
    private javax.swing.JLabel labelLogradouro1;
    private javax.swing.JLabel labelLogradouro2;
    private javax.swing.JLabel labelLogradouro3;
    private javax.swing.JLabel labelLogradouro4;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelNomeCli;
    private javax.swing.JLabel labelNomePes;
    private javax.swing.JLabel labelcliente;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel nomCliLb;
    private javax.swing.JLabel nomeCont;
    private javax.swing.JLabel nomeContLb;
    private javax.swing.JLabel numConta;
    private javax.swing.JLabel numerocont;
    private javax.swing.JPanel painelAbrirConta;
    private javax.swing.JPanel painelCadastrarCliente;
    private javax.swing.JPanel painelConsultarCliente;
    private javax.swing.JPanel painelConta;
    private javax.swing.JPanel painelOpcaoCliente;
    private javax.swing.JPanel painelOpcaoConsultar;
    private javax.swing.JButton pesqCont;
    private javax.swing.JLabel pesqLb;
    private javax.swing.JButton pessoaFisca;
    private javax.swing.JButton pessoaJuridica;
    private javax.swing.JButton sacarbtn;
    private javax.swing.JLabel saldo;
    private javax.swing.JLabel saldoCont;
    private javax.swing.JLabel tipContLb;
    private javax.swing.JLabel tipConta;
    private javax.swing.JLabel tipLabel;
    private javax.swing.JButton transfbtn;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtConsultaCli;
    private javax.swing.JTextField txtCpfCnpj;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtTel;
    // End of variables declaration//GEN-END:variables
}
